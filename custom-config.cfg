[DEFAULT]
# Environment settings (robot physical environment)
# Position where the robot shall take items from the conveyor belt
conveyor_belt_output_location = [93.74,-156,23.47,17,-17,0]
# Positions to pass while moving from output to input of conv.belt
conveyor_belt_intermediate_locations = [[134.034,-93.823,188.632,0.000,13.001,-34.992]]
# Position where the robot shall place items for the conveyor belt
conveyor_belt_input_location = [-59.502,216.432,305.211,3.147,-9.069,107.021]

# All store positions
store_locations = [[39,-250,34,-3.,-2.,0],[70,-217,34,-3.,-2.,0.],[ 12,-222.90,34,-3.00,-2.00,0],[40,-191,34,-3.,-2.,0],[-18.3,-192.90,34,-3.00,-2.0,0.0],[12,-163,34,-3.00,-2.0,0]]

# Estimate obstacle positions by "going there" with remote control
obstacle_locations = [[]]

stored_items_initial = 0
# Mirobot settings
# Win: DeviceManager, Unix: ls /dev/tty.usb*
# run python list_ports.py to find out this config value
mirobot_portname = COM8
# Display robot debug output
mirobot_debug = True

# OPC UA settings

# NOTE: urls, nodes, values and routines belong together! They are order and length sensitive 
# NOTE: For each url, a node, a trigger value and routine to execute must be defined here
# NOTE routines must be one of 'store_item', 'put_from_store', 'put_from_conveyor_belt_output'

opcua_server_urls=["opc.tcp://192.168.1.1:4840", "opc.tcp://localhost:4840"]
opcua_nodes = ['ns=3;s="MeasuringStationStep"', 'ns=3;s="test"']
opcua_values = [22, -42]
opcua_routines = ['put_from_conveyor_belt_output', 'store_item']

# in millis:
opcua_polling_rate = 100
# in seconds:
opcua_request_timeout=4

[BLE]
## Bluetooth Low Energy connection type
# Win: DeviceManager, Unix: ls /dev/tty.usb*
mirobot_portname = ble
# Display robot debug output?
mirobot_debug = True
## OPC UA settings
opcua_server_url=opc.tcp://opcuaserver.com:48010
# Seconds
opcua_request_timeout=5
# OPCUA username
opcua_user = admin
# OPCUA password
opcua_password = pw
